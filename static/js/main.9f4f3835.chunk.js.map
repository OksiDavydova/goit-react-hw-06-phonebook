{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/Title/Title.module.css","components/Title/SectionTitle/SectionTitle.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Title/Title.jsx","components/Title/SectionTitle/SectionTitle.jsx","redux/actions-contacts.js","components/ContactForm/ContactForm.js","components/Notification/Notification.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/default-contacts.js","redux/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","HeroTitle","title","hero_title","defaultProps","SectionTitle","sectionTitle","section_title","addContact","createAction","deleteContact","changeFilter","connect","state","contacts","dispatch","addNewContact","contact","useState","name","setName","number","setNumber","handleChange","evt","target","value","reset","inputNameId","shortid","generate","inputNumberId","form_overlay","onSubmit","preventDefault","newContact","id","normalizedName","toLowerCase","find","alert","form","htmlFor","label","type","input","onChange","pattern","required","btn_submit","Notification","message","message_notification","propType","PropTypes","string","isRequired","getContacts","allContacts","filterValue","normFilter","filter","includes","onDeleteContact","length","contacts_list","map","list_item","href","link_to_call","btn_delete","onClick","onChangeFilter","e","trim","filter_overlay","filter_label","filter_input","App","defaultContacts","item","contactsReducer","createReducer","payload","filterReducer","_","combineReducers","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9f4f3835.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_overlay\":\"Filter_filter_overlay__2P3a8\",\"filter_label\":\"Filter_filter_label__2nMPP\",\"filter_input\":\"Filter_filter_input__3YrMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__oynRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero_title\":\"Title_hero_title__13lVf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section_title\":\"SectionTitle_section_title__1Mav2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_notification\":\"Notification_message_notification__24rJ5\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Title.module.css\";\r\n\r\nexport default function HeroTitle({ title }) {\r\n  return <h1 className={s.hero_title}>{title}</h1>;\r\n}\r\n\r\nHeroTitle.defaultProps = {\r\n  title: \"Phonebook\",\r\n};\r\n\r\nHeroTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./SectionTitle.module.css\";\r\n\r\nexport default function SectionTitle({ sectionTitle }) {\r\n  return <h2 className={s.section_title}>{sectionTitle}</h2>;\r\n}\r\n\r\nSectionTitle.defaultProps = {\r\n  title: \"Contacts\",\r\n};\r\n\r\nSectionTitle.propTypes = {\r\n  sectionTitle: PropTypes.string,\r\n};\r\n","// import actionTypes from \"./actions-type\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"ADD/contact\");\r\nexport const deleteContact = createAction(\"DELETE/contact\");\r\nexport const changeFilter = createAction(\"FILTER_CHANGE/contact\");\r\n\r\n// export const addContact = (obj) => ({\r\n//   type: actionTypes.ADD,\r\n//   payload: obj,\r\n// });\r\n\r\n// export const deleteContact = (id) => ({\r\n//   type: actionTypes.DELETE,\r\n//   payload: id,\r\n// });\r\n\r\n// export const changeFilter = (value) => ({\r\n//   type: actionTypes.FILTER,\r\n//   payload: value,\r\n// });\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/actions-contacts\";\r\n\r\nfunction ContactForm({ addNewContact, contacts }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = (evt) => {\r\n    const { name, value } = evt.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const newContact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const normalizedName = name.toLowerCase();\r\n    if (\r\n      contacts.find((contact) => contact.name.toLowerCase() === normalizedName)\r\n    ) {\r\n      alert(`${name} is already in contacts list`);\r\n      return;\r\n    } else if (contacts.find((contact) => contact.number === number)) {\r\n      alert(`${number} is already in contacts list`);\r\n      return;\r\n    } else {\r\n      addNewContact(newContact);\r\n    }\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const inputNameId = shortid.generate();\r\n  const inputNumberId = shortid.generate();\r\n\r\n  return (\r\n    <div className={s.form_overlay}>\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label htmlFor={inputNameId} className={s.label}>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            className={s.input}\r\n            onChange={handleChange}\r\n            value={name}\r\n            name=\"name\"\r\n            id={inputNameId}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={inputNumberId} className={s.label}>\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            className={s.input}\r\n            onChange={handleChange}\r\n            value={number}\r\n            name=\"number\"\r\n            id={inputNumberId}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\" className={s.btn_submit}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addNewContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewContact: (contact) => dispatch(addContact(contact)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\n\r\nexport function Notification({ message }) {\r\n  return <p className={s.message_notification}>{message}</p>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  message: \"No contacts \",\r\n};\r\n\r\nNotification.propType = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { MdCall, MdOutlineDeleteOutline } from \"react-icons/md\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/actions-contacts\";\r\nimport { Notification } from \"../Notification/Notification\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  // console.log(contacts);\r\n  return (\r\n    <>\r\n      {contacts.length > 0 ? (\r\n        <>\r\n          <ul className={s.contacts_list}>\r\n            {contacts.map(({ id, name, number }) => (\r\n              <li key={id} className={s.list_item}>\r\n                <p>{name}</p>\r\n                <a href=\"tel:{number}\" className={s.link_to_call}>\r\n                  <MdCall />\r\n                  {number}\r\n                </a>\r\n                <button\r\n                  type=\"button\"\r\n                  className={s.btn_delete}\r\n                  onClick={() => onDeleteContact(id)}\r\n                >\r\n                  Delete <MdOutlineDeleteOutline />\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        <Notification />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getContacts = (allContacts, filterValue) => {\r\n  let normFilter = filterValue.toLowerCase();\r\n\r\n  if (filterValue) {\r\n    return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normFilter)\r\n    );\r\n  }\r\n  return allContacts;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state.contacts, state.filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDeleteContact: (id) => dispatch(deleteContact(id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/actions-contacts\";\r\n\r\nfunction Filter({ filter, onChangeFilter }) {\r\n  return (\r\n    <div className={s.filter_overlay}>\r\n      <label className={s.filter_label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={onChangeFilter}\r\n          className={s.filter_input}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: state.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChangeFilter: (e) => dispatch(changeFilter(e.target.value.trim())),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import \"./App.css\";\r\n// import { connect } from \"react-redux\";\r\n\r\nimport Container from \"./components/Container/Container\";\r\nimport HeroTitle from \"./components/Title/Title\";\r\nimport SectionTitle from \"./components/Title/SectionTitle/SectionTitle\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <HeroTitle title=\"Phonebook\" />\r\n      <ContactForm />\r\n      <>\r\n        <SectionTitle sectionTitle=\"Contacts\" />\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const defaultContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\nexport default defaultContacts;\r\n","// import actionTypes from \"./actions-type\";\r\nimport { addContact, deleteContact, changeFilter } from \"./actions-contacts\";\r\nimport { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport defaultContacts from \"./default-contacts\";\r\n\r\nconst contacts = {\r\n  item: [...defaultContacts],\r\n  filter: \"\",\r\n};\r\n\r\n//?toolkit\r\nexport const contactsReducer = createReducer(contacts.item, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nexport const filterReducer = createReducer(contacts.filter, {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\n//!redux\r\n// export const contactsReducer = (\r\n//   state = initialsState.contacts,\r\n//   { type, payload }\r\n// ) => {\r\n//   switch (type) {\r\n//     case actionTypes.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case actionTypes.DELETE:\r\n//       return state.filter((contact) => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const filterReducer = (\r\n//   state = initialsState.filter,\r\n//   { type, payload }\r\n// ) => {\r\n//   switch (type) {\r\n//     case actionTypes.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./contacts-reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n\r\n//!redux\r\n// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\"; // without toolkit->  const store = createStore(rootReducer, composeWithDevTools());\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n// console.log(store);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_overlay\":\"ContactForm_form_overlay__3cTwS\",\"form\":\"ContactForm_form__2w2h4\",\"input\":\"ContactForm_input__1fxqH\",\"label\":\"ContactForm_label__245MF\",\"btn_submit\":\"ContactForm_btn_submit__nz6t1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_delete\":\"ContactList_btn_delete__3M620\",\"contacts_list\":\"ContactList_contacts_list__3C491\",\"list_item\":\"ContactList_list_item__1UBri\",\"link_to_call\":\"ContactList_link_to_call__2FLCT\"};"],"sourceRoot":""}